name: Build and Test

on:
  push:
    tags:
      - '*'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: lern-jobs-dependency-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            lern-jobs-dependency-cache-
      - name: Install ImageMagick
        run: |
          sudo apt-get update || sudo apt-get update
          sudo apt-get install -y imagemagick

      - name: Build the code
        run: mvn clean install -DskipTests

      #- name: Execute coverage report
      #  run: mvn clean scoverage:report

      #- name: Save test results
      #  if: always()
      #  run: |
      #    mkdir -p ~/test-results/junit/
      #    find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: lern-jobs-dependency-cache-${{ hashFiles('pom.xml') }}

      #- name: Store test results
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: test-results
      #    path: ~/test-results

      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.2.1
        with:
          maven-version: '3.6.3'
          java-version: '11'

      - name: Verify Maven version
        run: mvn -v

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_LOGIN }}

      - name: Build Docker Image
        run: |
          cd jobs-distribution
          mvn package -Pbuild-docker-image -Drelease-version=${{ github.ref_name }}

      - name: Tag Docker Image
        run: |
          docker tag data-pipeline:${{ github.ref_name }} ghcr.io/${{ github.actor }}/data-pipeline:${{ github.ref_name }}

      - name: Push Docker Image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.actor }}/data-pipeline:${{ github.ref_name }}
